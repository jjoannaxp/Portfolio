{"ast":null,"code":"var _jsxFileName = \"/Users/joanna/portfolio/src/Components/Link/Link.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Arrow from '../../Assets/Arrow.svg';\nimport './Link.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Link({\n  to,\n  text,\n  isArrow,\n  isSelected,\n  onClick\n}) {\n  _s();\n  const [isHovered, setIsHovered] = useState(false);\n  const [isPressed, setIsPressed] = useState(false);\n  const handleMouseEnter = () => {\n    setIsHovered(true);\n  };\n  const handleMouseLeave = () => {\n    setIsHovered(false);\n    setIsPressed(false);\n  };\n  const handleMouseDown = () => {\n    setIsHovered(false);\n    setIsPressed(true);\n  };\n  const handleMouseUp = () => {\n    setIsPressed(false);\n    setIsHovered(true);\n  };\n  const handleClick = () => {\n    onClick(text);\n  };\n  return /*#__PURE__*/_jsxDEV(RouterLink, {\n    to: to,\n    className: `NavLink ${isSelected ? 'selected' : ''} ${isHovered ? 'hovered' : ''} ${isPressed ? 'pressed' : ''}`,\n    onClick: handleClick,\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    onMouseDown: handleMouseDown,\n    onMouseUp: handleMouseUp,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LinkContent\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), isArrow === 'true' && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Arrow,\n        className: \"Arrow\",\n        alt: \"Arrow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Underline\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(Link, \"DQPbKel4aua5pv3cuXQ31jj7ktI=\");\n_c = Link;\nexport default Link;\nvar _c;\n$RefreshReg$(_c, \"Link\");","map":{"version":3,"names":["React","useState","Link","RouterLink","Arrow","jsxDEV","_jsxDEV","to","text","isArrow","isSelected","onClick","_s","isHovered","setIsHovered","isPressed","setIsPressed","handleMouseEnter","handleMouseLeave","handleMouseDown","handleMouseUp","handleClick","className","onMouseEnter","onMouseLeave","onMouseDown","onMouseUp","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["/Users/joanna/portfolio/src/Components/Link/Link.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Arrow from '../../Assets/Arrow.svg';\nimport './Link.css';\n\nfunction Link({ to, text, isArrow, isSelected, onClick }) {\n    const [isHovered, setIsHovered] = useState(false);\n    const [isPressed, setIsPressed] = useState(false);\n\n    const handleMouseEnter = () => {\n        setIsHovered(true);\n    };\n\n    const handleMouseLeave = () => {\n        setIsHovered(false);\n        setIsPressed(false);\n    };\n\n    const handleMouseDown = () => {\n        setIsHovered(false);\n        setIsPressed(true);\n    };\n\n    const handleMouseUp = () => {\n        setIsPressed(false);\n        setIsHovered(true);\n\n    };\n\n    const handleClick = () => {\n        onClick(text);\n    };\n\n    return (\n        <RouterLink\n            to={to}\n            className={`NavLink ${isSelected ? 'selected' : ''} ${isHovered ? 'hovered' : ''} ${isPressed ? 'pressed' : ''}`}\n            onClick={handleClick}\n            onMouseEnter={handleMouseEnter}\n            onMouseLeave={handleMouseLeave}\n            onMouseDown={handleMouseDown}\n            onMouseUp={handleMouseUp}\n        >\n            <div className=\"LinkContent\">\n                <h4>{text}</h4>\n                {isArrow === 'true' && <img src={Arrow} className=\"Arrow\" alt=\"Arrow\" />}\n            </div>\n            <div className=\"Underline\"></div>\n        </RouterLink>\n    );\n}\n\nexport default Link;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,IAAIC,UAAU,QAAQ,kBAAkB;AACrD,OAAOC,KAAK,MAAM,wBAAwB;AAC1C,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,SAASJ,IAAIA,CAAC;EAAEK,EAAE;EAAEC,IAAI;EAAEC,OAAO;EAAEC,UAAU;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EACtD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMgB,gBAAgB,GAAGA,CAAA,KAAM;IAC3BH,YAAY,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMI,gBAAgB,GAAGA,CAAA,KAAM;IAC3BJ,YAAY,CAAC,KAAK,CAAC;IACnBE,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,MAAMG,eAAe,GAAGA,CAAA,KAAM;IAC1BL,YAAY,CAAC,KAAK,CAAC;IACnBE,YAAY,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMI,aAAa,GAAGA,CAAA,KAAM;IACxBJ,YAAY,CAAC,KAAK,CAAC;IACnBF,YAAY,CAAC,IAAI,CAAC;EAEtB,CAAC;EAED,MAAMO,WAAW,GAAGA,CAAA,KAAM;IACtBV,OAAO,CAACH,IAAI,CAAC;EACjB,CAAC;EAED,oBACIF,OAAA,CAACH,UAAU;IACPI,EAAE,EAAEA,EAAG;IACPe,SAAS,EAAE,WAAWZ,UAAU,GAAG,UAAU,GAAG,EAAE,IAAIG,SAAS,GAAG,SAAS,GAAG,EAAE,IAAIE,SAAS,GAAG,SAAS,GAAG,EAAE,EAAG;IACjHJ,OAAO,EAAEU,WAAY;IACrBE,YAAY,EAAEN,gBAAiB;IAC/BO,YAAY,EAAEN,gBAAiB;IAC/BO,WAAW,EAAEN,eAAgB;IAC7BO,SAAS,EAAEN,aAAc;IAAAO,QAAA,gBAEzBrB,OAAA;MAAKgB,SAAS,EAAC,aAAa;MAAAK,QAAA,gBACxBrB,OAAA;QAAAqB,QAAA,EAAKnB;MAAI;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACdtB,OAAO,KAAK,MAAM,iBAAIH,OAAA;QAAK0B,GAAG,EAAE5B,KAAM;QAACkB,SAAS,EAAC,OAAO;QAACW,GAAG,EAAC;MAAO;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvE,CAAC,eACNzB,OAAA;MAAKgB,SAAS,EAAC;IAAW;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAErB;AAACnB,EAAA,CA7CQV,IAAI;AAAAgC,EAAA,GAAJhC,IAAI;AA+Cb,eAAeA,IAAI;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}